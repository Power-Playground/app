# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build Production

on:
  schedule:
    - cron: '0 0 * * 1'
  push:
    paths-ignore:
      - '.github/workflows/preview.yml'
    branches:
      - 'main'

jobs:
  contrib-readme-job:
    runs-on: ubuntu-latest
    name: A job to automate contrib in readme
    steps:
      - name: Contribute List
        uses: akhilmhdh/contributors-readme-action@v2.3.6
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}

  build-dist:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        run: corepack enable

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile && node scripts/bootstrap.mjs

      - name: Build site
        env:
          BASE_URL: app
        run: |
          pnpm build
          tar -czvf dist.tar.gz dist vercel.json

      - name: upload dist and vercel.json
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist.tar.gz

  deploy-to-github:
    needs: build-dist
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download dist
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: .

      - name: Unzip dist
        run: |
          tar -xzvf dist.tar.gz
          rm dist.tar.gz
      - name: Deploy to GitHub Pages
        uses: crazy-max/ghaction-github-pages@v3
        with:
          target_branch: gh-pages
          build_dir: dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-to-vercel:
    needs: build-dist
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

    steps:
      - name: Download dist
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: .

      - name: Unzip dist
        run: |
          tar -xzvf dist.tar.gz
          rm dist.tar.gz
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '18'
      - name: Install Vercel CLI
        run: npm add -g vercel

      - name: Deploy to Vercel
        env:
          BASE: None
        run: |
          mv dist app
          vercel --token=${{ secrets.VERCEL_TOKEN }} --prod
